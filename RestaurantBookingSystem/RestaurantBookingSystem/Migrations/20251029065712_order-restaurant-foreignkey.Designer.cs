// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantBookingSystem.Data;

#nullable disable

namespace RestaurantBookingSystem.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20251029065712_order-restaurant-foreignkey")]
    partial class orderrestaurantforeignkey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantBookingSystem.Model.Customers.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("UserId");

                    b.ToTable("Cart");

                    b.HasData(
                        new
                        {
                            CartId = 1,
                            AddedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = 1,
                            Quantity = 2,
                            RestaurantId = 1,
                            UserId = 1
                        },
                        new
                        {
                            CartId = 2,
                            AddedAt = new DateTime(2023, 1, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = 2,
                            Quantity = 1,
                            RestaurantId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Customers.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rating")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("UserId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Comments = "Excellent food and service!",
                            Rating = 9m,
                            RestaurantId = 1,
                            ReviewDate = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            ReviewId = 2,
                            Comments = "Loved the desserts",
                            Rating = 8m,
                            RestaurantId = 1,
                            ReviewDate = new DateTime(2023, 1, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Customers.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Description = "Standard customer account",
                            RoleName = "Customer"
                        },
                        new
                        {
                            RoleId = 3,
                            Description = "Restaurant administrator",
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            Description = "Manages Restaurant",
                            RoleName = "Manager"
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Customers.UserPreferences", b =>
                {
                    b.Property<int>("PreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreferenceId"));

                    b.Property<bool?>("NotificationsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("PreferredCity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PreferredFoodType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PreferenceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPreferences");

                    b.HasData(
                        new
                        {
                            PreferenceId = 1,
                            NotificationsEnabled = true,
                            PreferredCity = "Chennai",
                            PreferredFoodType = "Indian",
                            Theme = "Light",
                            UserId = 1
                        },
                        new
                        {
                            PreferenceId = 2,
                            NotificationsEnabled = false,
                            PreferredCity = "Bangalore",
                            PreferredFoodType = "Desserts",
                            Theme = "Dark",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Customers.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john@example.com",
                            FirstName = "John",
                            IsActive = true,
                            LastLogin = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Doe",
                            Password = "hashedPassword1",
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            FirstName = "Jack",
                            IsActive = true,
                            LastLogin = new DateTime(2023, 1, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Sparrow",
                            Password = "hashedPassword2",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Customers.Wishlist", b =>
                {
                    b.Property<int>("WishlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WishlistId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("WishlistId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("UserId", "ItemId", "RestaurantId")
                        .IsUnique();

                    b.ToTable("Wishlist");

                    b.HasData(
                        new
                        {
                            WishlistId = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = 1,
                            RestaurantId = 1,
                            UserId = 1
                        },
                        new
                        {
                            WishlistId = 2,
                            CreatedAt = new DateTime(2023, 1, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = 2,
                            RestaurantId = 2,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Delivery.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryPersonId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstimatedDeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("DeliveryId");

                    b.HasIndex("AddressId");

                    b.HasIndex("DeliveryPersonId");

                    b.HasIndex("OrderId");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Delivery.DeliveryAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Landmark")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("DeliveryAddress");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            Address = "123 MG Road",
                            City = "Chennai",
                            ContactNo = "9876543210",
                            IsDefault = true,
                            Landmark = "Near Park",
                            Mobile = "9876543210",
                            Pincode = "600001",
                            State = "Tamil Nadu",
                            UserId = 1
                        },
                        new
                        {
                            AddressId = 2,
                            Address = "456 T Nagar",
                            City = "Chennai",
                            ContactNo = "9876543220",
                            IsDefault = false,
                            Landmark = "Near Mall",
                            Mobile = "9876543220",
                            Pincode = "600017",
                            State = "Tamil Nadu",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Delivery.DeliveryPerson", b =>
                {
                    b.Property<int>("DeliveryPersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryPersonId"));

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<string>("DeliveryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalDeliveries")
                        .HasColumnType("int");

                    b.Property<int?>("otp")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.HasKey("DeliveryPersonId");

                    b.HasIndex("MobileNo")
                        .IsUnique();

                    b.ToTable("DeliveryPerson");

                    b.HasData(
                        new
                        {
                            DeliveryPersonId = 1,
                            AverageRating = 4.7999999999999998,
                            DeliveryName = "Arjun Kumar",
                            Email = "arjun@delivery.com",
                            LicenseNumber = "TN45DL7890",
                            MobileNo = "9876543210",
                            Status = "Available",
                            TotalDeliveries = 100
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Manager.ManagerDetails", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ManagerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("ManagerDetails");

                    b.HasData(
                        new
                        {
                            ManagerId = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "arjun@manager.com",
                            IsActive = true,
                            ManagerName = "Arjun Kumar",
                            PasswordHash = "hashed123",
                            PhoneNumber = "9876543210",
                            UpdatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Manager.ManagerPayment", b =>
                {
                    b.Property<int>("ManagerPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerPaymentId"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("ManagerPaymentId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("ManagerPayments");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.DineIn", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int?>("RestaurantsRestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TableId");

                    b.HasIndex("RestaurantsRestaurantId");

                    b.HasIndex("RestaurantId", "TableNo")
                        .IsUnique();

                    b.ToTable("DineIn");

                    b.HasData(
                        new
                        {
                            TableId = 1,
                            Capacity = 4,
                            RestaurantId = 1,
                            Status = "Available",
                            TableNo = "T1"
                        },
                        new
                        {
                            TableId = 2,
                            Capacity = 6,
                            RestaurantId = 1,
                            Status = "Reserved",
                            TableNo = "T2"
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.MenuList", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("AvailableQty")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsVegetarian")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("ItemId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("MenuList");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            AvailableQty = 50,
                            Description = "Classic Indian curry",
                            Discount = 10m,
                            IsVegetarian = false,
                            ItemName = "Butter Chicken",
                            Price = 250m,
                            RestaurantId = 1,
                            Tax = 18m
                        },
                        new
                        {
                            ItemId = 2,
                            AvailableQty = 30,
                            Description = "Rich chocolate dessert",
                            Discount = 5m,
                            IsVegetarian = true,
                            ItemName = "Chocolate Cake",
                            Price = 150m,
                            RestaurantId = 1,
                            Tax = 5m
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("ItemsList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtyOrdered")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ItemsList = "[{\"ItemId\":1,\"Quantity\":2}]",
                            OrderDate = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "DineIn",
                            QtyOrdered = 2,
                            RestaurantId = 1,
                            Status = "InProgress",
                            TotalAmount = 536m,
                            UserId = 1
                        },
                        new
                        {
                            OrderId = 2,
                            ItemsList = "[{\"ItemId\":2,\"Quantity\":1}]",
                            OrderDate = new DateTime(2023, 1, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "DineOut",
                            QtyOrdered = 1,
                            RestaurantId = 1,
                            Status = "Pending",
                            TotalAmount = 157m,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PayMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrderId");

                    b.ToTable("Payment");

                    b.HasData(
                        new
                        {
                            PaymentId = 1,
                            Amount = 536m,
                            OrderId = 1,
                            PayMethod = "UPI",
                            PaymentDate = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed"
                        },
                        new
                        {
                            PaymentId = 2,
                            Amount = 157m,
                            OrderId = 2,
                            PayMethod = "Cash",
                            PaymentDate = new DateTime(2023, 1, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Pending"
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("ReservationInTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ReservationOutTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("ReseveredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("TableId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.Restaurants", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DeliveryCharge")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Images")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(505)
                        .HasColumnType("nvarchar(505)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Ratings")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<string>("RestaurantCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("RestaurantType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("RestaurantName")
                        .IsUnique();

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = 1,
                            City = "Chennai",
                            ContactNo = "9876543210",
                            CreatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryCharge = 50m,
                            Description = "Authentic Indian Cuisine",
                            IsActive = true,
                            Location = "MG Road, Chennai",
                            ManagerId = 1,
                            Ratings = 9.2m,
                            RestaurantCategory = "Restaurant",
                            RestaurantName = "Spice Garden",
                            RestaurantType = "Both"
                        });
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Customers.Cart", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Customers.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Customers.Review", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Restaurant.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantBookingSystem.Model.Customers.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Customers.UserPreferences", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Customers.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Customers.Users", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Customers.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Customers.Wishlist", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Customers.Users", "User")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Delivery.Delivery", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Delivery.DeliveryAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("RestaurantBookingSystem.Model.Delivery.DeliveryPerson", "DeliveryPerson")
                        .WithMany()
                        .HasForeignKey("DeliveryPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantBookingSystem.Model.Restaurant.Orders", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("DeliveryPerson");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Delivery.DeliveryAddress", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Customers.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Manager.ManagerDetails", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Customers.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Manager.ManagerPayment", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Manager.ManagerDetails", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantBookingSystem.Model.Restaurant.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.DineIn", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Restaurant.Restaurants", "Restaurants")
                        .WithMany()
                        .HasForeignKey("RestaurantsRestaurantId");

                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.MenuList", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Restaurant.Restaurants", "Restaurant")
                        .WithMany("MenuLists")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.Orders", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Restaurant.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantBookingSystem.Model.Customers.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.Payment", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Restaurant.Orders", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.Reservation", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Restaurant.DineIn", "Table")
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantBookingSystem.Model.Customers.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.Restaurants", b =>
                {
                    b.HasOne("RestaurantBookingSystem.Model.Manager.ManagerDetails", "Manager")
                        .WithMany("Restaurants")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Manager.ManagerDetails", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("RestaurantBookingSystem.Model.Restaurant.Restaurants", b =>
                {
                    b.Navigation("MenuLists");
                });
#pragma warning restore 612, 618
        }
    }
}
